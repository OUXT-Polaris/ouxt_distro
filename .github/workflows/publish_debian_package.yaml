name: publish_debian_package
on:
  schedule:
  - cron: 0 0 * * *
  pull_request:
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rosdistro: [foxy, galactic]
        package:
          - [OUXT-Polaris, ouxt_common]
    container: wamvtan/debian_package_builder:${{ matrix.rosdistro }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: ouxt_distro
      - uses: actions/checkout@v2
        with:
          repository: ${{ matrix.package[0] }}/${{ matrix.package[1] }}
          path: ${{ matrix.package[1] }}
      - name: update rosdep list
        run: echo yaml file://$GITHUB_WORKSPACE/ouxt_distro/rosdep.yaml >> /etc/ros/rosdep/sources.list.d/10-local.list
      - name: rosdep update and apt update
        run: rosdep update && apt update
      - name: install depends
        run: rosdep install -iry --from-paths ${{ matrix.package[1] }} --ignore-src --rosdistro=${{ matrix.rosdistro }}
      - name: bloom generate
        run: colcon list -t -p | xargs -L 1 bash -c 'cd "$0" && bloom-generate rosdebian --ros-distro ${{ matrix.rosdistro }}'
      - name: generate debian package
        run: colcon list -t -p | xargs -L 1 bash -c 'cd "$0" && fakeroot debian/rules binary'
      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ${{ matrix.package[1] }}/*.deb
  publish_to_apt_repo:
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - name: get debian package lists
        id: get_debian_package_lists
        run: |
          list=$(ls -1)
          echo "::set-output name=packages::$list"
      - uses: jrandiny/apt-repo-action@master
        with:
          github_token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
          arch: |
            amd64
          version: |
            focal
          file: ${{ steps.get_debian_package_lists.outputs.packages }}
          file_target_version: focal
          public_key: ${{ secrets.OUXT_APT_REPO_PUBLIC_KEY }}
          private_key: ${{ secrets.OUXT_APT_REPO_PASSPHRASE }}
          key_passphrase: ${{ secrets.OUXT_APT_REPO_PASSPHRASE }}